# 此配置文件允许您在各种事件上执行命令。
# 支持在命令中使用的占位符：
#   %p 将被玩家名称替换。
#   %nick 将被玩家昵称替换
#   %ip 将被玩家IP地址替换
#   %country 将被玩家所在国家替换
# 
# 例如，如果您想要向刚刚注册的玩家发送欢迎消息：
# onRegister:
#   welcome:
#     command: 'msg %p 欢迎来到服务器！'
#     executor: CONSOLE
# 
# 这将使控制台执行msg命令来向玩家发送消息。
# 每个事件下的命令都有一个您可以自由选择的名称（例如上面的'welcome'），
# 其后是一个必填的 'command' 字段，定义要运行的命令，
# 而 'executor' 定义谁将运行命令（可以是 PLAYER 或 CONSOLE）。更详细的示例：
# onLogin:
#   welcome:
#     command: 'msg %p 欢迎回来！'
#     executor: PLAYER
#   broadcast:
#     command: 'broadcast %p 已加入，欢迎回来！'
#     executor: CONSOLE
# 
# 您还可以为命令添加延迟。它将在指定的 ticks 之后运行。示例：
# onLogin:
#   rules:
#     command: 'rules'
#     executor: PLAYER
#     delay: 200
# 
# 支持的命令事件：onLogin、onSessionLogin、onFirstLogin、onJoin、onLogout、onRegister、onUnregister
# 
# 对于 onLogin 和 onFirstLogin，您可以使用 'ifNumberOfAccountsLessThan' 和 'ifNumberOfAccountsAtLeast'
# 来为玩家可以拥有多少个帐户（通过 IP 匹配）指定限制，以便运行命令：
# onLogin:
#   warnOnManyAccounts:
#     command: 'say 哎呀！%p 有很多辅助账户！'
#     executor: CONSOLE
#     ifNumberOfAccountsAtLeast: 5
# 在登录时运行的玩家的 '上次登录日期' 为空的命令
onFirstLogin: {}
onJoin: {}
onLogin: {}
# 每当已登录的玩家使用 /logout 或退出游戏时都会调用这些命令。
# 如果未登录的玩家退出服务器，则不会运行这些命令。
# 注意：如果您的服务器崩溃，这些命令将不会运行，因此不要依赖它们来撤消
# 'onLogin' 命令，这对于非登录玩家来说可能是危险的！
onLogout: {}
onRegister: {}
onSessionLogin: {}
# 每当玩家注销帐户（无论是玩家自己还是管理员操作）时运行的命令
onUnregister: {}